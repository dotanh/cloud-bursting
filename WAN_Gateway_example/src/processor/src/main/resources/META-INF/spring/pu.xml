<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:os-core="http://www.openspaces.org/schema/core"
       xmlns:os-events="http://www.openspaces.org/schema/events"
       xmlns:os-remoting="http://www.openspaces.org/schema/remoting"
       xmlns:os-gateway="http://www.openspaces.org/schema/core/gateway"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.openspaces.org/schema/core http://www.openspaces.org/schema/9.0/core/openspaces-core.xsd
       http://www.openspaces.org/schema/events http://www.openspaces.org/schema/9.0/events/openspaces-events.xsd
       http://www.openspaces.org/schema/core/gateway http://www.openspaces.org/schema/9.0/core/gateway/openspaces-gateway.xsd
       http://www.openspaces.org/schema/remoting http://www.openspaces.org/schema/9.0/remoting/openspaces-remoting.xsd">

    <!--
        Spring property configurer which allows us to use system properties (such as user.name).
    -->
    <bean id="propertiesConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="properties">
            <props>
                <prop key="localGatewayName">SITE-1</prop>
                <prop key="targetGatewayName">SITE-2</prop>
            </props>
        </property>
    </bean>

    <!--
        Enables the usage of @GigaSpaceContext annotation based injection.
    -->
    <os-core:giga-space-context/>
 
    <!--
        A bean representing a space (an IJSpace implementation).

        Note, we do not specify here the cluster topology of the space. It is declated outside of
        the processing unit or within the SLA bean.
    -->
    <os-core:space id="space" url="/./space1?groups=idan1" gateway-targets="gatewayTargets" />
 
 	<os-gateway:targets id="gatewayTargets" local-gateway-name="${localGatewayName}">
    	<os-gateway:target name="${targetGatewayName}"/>    	    	        	        
    </os-gateway:targets>
 
    <!--
        OpenSpaces simplified space API built on top of IJSpace/JavaSpace.
    -->
    <os-core:giga-space id="gigaSpace" space="space" />

    <!--
        The data processor bean
    -->
    <bean id="dataProcessor" class="com.gigaspaces.poc.processor.Processor">
        <property name="connectionUrl" value="jdbc:mysql://localhost:3306/test" />
        <property name="username" value="root" />
        <property name="password" value="" />
        <property name="siteName" value="${localGatewayName}" />
    </bean>

    <!--
        A polling event container that perfoms (by default) polling take operations against
        the space using the provided template (in our case, and the non processed data objects).
        Once a match is found, the data processor bean event listener is triggered using the
        method adapter.
    -->
    <os-events:polling-container id="dataProcessorPollingEventContainer" giga-space="gigaSpace">
        <os-core:template>
            <bean class="com.gigaspaces.poc.common.data.DataBaseQueries">
				<property name="siteName" value="${targetGatewayName}"/>            
            </bean>
        </os-core:template>
		<os-events:listener>
			<os-events:annotation-adapter>
				<os-events:delegate ref="dataProcessor" />
			</os-events:annotation-adapter>
		</os-events:listener>
	</os-events:polling-container>
	
</beans>